{"remainingRequest":"/Users/victormosquera/proyects/Docker/Carrito_compras/client/node_modules/babel-loader/lib/index.js!/Users/victormosquera/proyects/Docker/Carrito_compras/client/src/store/store.js","dependencies":[{"path":"/Users/victormosquera/proyects/Docker/Carrito_compras/client/src/store/store.js","mtime":1562769553438},{"path":"/Users/victormosquera/proyects/Docker/Carrito_compras/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victormosquera/proyects/Docker/Carrito_compras/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/victormosquera/proyects/Docker/Carrito_compras/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    carrito: [],\n    //se guarda cada compra que se realiza (id, descripcion, precio, cantidad, cantidadExistencia)\n    Cedula: null,\n    //identificacion del cliente que realiza la compra\n    data: null,\n    // datos cliente (idCliente, nombres, apellidos, telefono, direccion)\n    products: null,\n    // todos los datos de cada producto (idProducto, descripcion, precio, cantidadExistencia)\n    msg: null\n  },\n  mutations: {\n    addCar: function addCar(state, product) {\n      if (state.carrito.length == 0) {\n        //si esta vacio el carrito\n        state.carrito.push(product);\n      } else {\n        var est = true;\n\n        for (var i = 0; i < state.carrito.length; i++) {\n          //recorre el carrito                    \n          if (state.carrito[i].idProducto === product.idProducto) {\n            //pregunta si el idproducto nuevo es igual al evaluado  \n            state.carrito[i].cantidad++;\n            est = !est;\n            break;\n          }\n        }\n\n        if (est) state.carrito.push(product);\n      }\n    },\n    setCar: function setCar(state) {\n      state.carrito = [];\n    },\n    setMsg: function setMsg(state) {\n      return state.msg = null;\n    },\n    eliminarProducto: function eliminarProducto(state, idProducto) {\n      var pos = null;\n\n      for (var i = 0; i < state.carrito.length; i++) {\n        //recorre el carrito para buscar la posiciÃ³n \n        if (state.carrito[i].idProducto == idProducto) {\n          //guarda la posicion para eliminar\n          pos = i;\n          break;\n        }\n      }\n\n      state.carrito.splice(pos, 1); //elimina el producto del carrito\n    },\n    sendCompra: function () {\n      var _sendCompra = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(state) {\n        var carrito, idCliente, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                carrito = state.carrito;\n                idCliente = state.data.idCliente;\n                _context.next = 5;\n                return axios.post('http://localhost:9000/store/shop', {\n                  carrito: carrito,\n                  idCliente: idCliente\n                });\n\n              case 5:\n                data = _context.sent;\n                state.msg = data.data.message;\n                state.carrito = [];\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                throw _context.t0;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      function sendCompra(_x) {\n        return _sendCompra.apply(this, arguments);\n      }\n\n      return sendCompra;\n    }()\n  },\n  getters: {\n    buys: function buys(state) {\n      return state.carrito.length;\n    },\n    datos: function datos(state) {\n      return state.data;\n    },\n    items: function items(state) {\n      return state.carrito;\n    },\n    products: function products(state) {\n      return state.products;\n    },\n    client: function client(state) {\n      if (state.data == null) {\n        return 'Sing in';\n      } else {\n        return state.data.primernombre + ' ' + state.data.primerapellido;\n      }\n    },\n    dCompra: function dCompra(state) {\n      return state.carrito;\n    },\n    totalCompra: function totalCompra(state) {\n      return state.carrito.reduce(function (total, producto) {\n        return total + producto.precio * producto.cantidad;\n      }, 0);\n    }\n  },\n  actions: {\n    realizarCompra: function realizarCompra(context) {\n      //si hay algun producto sin catidad para comprar no se envia\n      var est = context.state.carrito.find(function (item) {\n        return item.cantidad == 0;\n      });\n\n      if (est) {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Error quantity of products'\n        });\n      } else {\n        context.commit('sendCompra');\n      }\n    }\n  }\n});",{"version":3,"sources":["/Users/victormosquera/proyects/Docker/Carrito_compras/client/src/store/store.js"],"names":["Vue","Vuex","axios","Swal","use","store","Store","state","carrito","Cedula","data","products","msg","mutations","addCar","product","length","push","est","i","idProducto","cantidad","setCar","setMsg","eliminarProducto","pos","splice","sendCompra","idCliente","post","message","getters","buys","datos","items","client","primernombre","primerapellido","dCompra","totalCompra","reduce","total","producto","precio","actions","realizarCompra","context","find","item","fire","type","title","text","commit"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n\n    state:{\n        carrito:[ ], //se guarda cada compra que se realiza (id, descripcion, precio, cantidad, cantidadExistencia)\n        Cedula:null,//identificacion del cliente que realiza la compra\n        data:null, // datos cliente (idCliente, nombres, apellidos, telefono, direccion)\n        products: null, // todos los datos de cada producto (idProducto, descripcion, precio, cantidadExistencia)\n        msg:null\n        \n    },\n    mutations: {\n        addCar:(state, product)=>{\n            if(state.carrito.length == 0) {//si esta vacio el carrito\n                state.carrito.push(product)\n            }else{\n                var est = true;\n                for (let i = 0; i < state.carrito.length; i++) { //recorre el carrito                    \n                    if (state.carrito[i].idProducto === product.idProducto ) {//pregunta si el idproducto nuevo es igual al evaluado  \n                        state.carrito[i].cantidad++;\n                        est = !est;\n                        break;\n                    }\n                }\n                if(est) state.carrito.push(product)\n            }            \n        },\n        setCar: (state)=>{\n            state.carrito = []\n        },\n        setMsg: state => state.msg = null,\n    \n        eliminarProducto: (state, idProducto) =>{\n            var pos = null;\n            for (let i = 0; i < state.carrito.length; i++) { //recorre el carrito para buscar la posiciÃ³n \n                if (state.carrito[i].idProducto == idProducto) { //guarda la posicion para eliminar\n                    pos = i;\n                    break;\n                }                \n            }\n            state.carrito.splice(pos, 1) //elimina el producto del carrito\n        },\n    \n        sendCompra:async (state)=>{\n            try {\n                const carrito = state.carrito\n                const idCliente= state.data.idCliente \n                const data = await axios.post('http://localhost:9000/store/shop', {carrito, idCliente})                \n                state.msg = data.data.message\n                state.carrito = []\n            } catch (error) {\n                 throw error\n            }\n            \n        },\n    },\n    getters:{\n        buys: (state) => {\n            return (state.carrito).length\n        },\n        datos: (state) => state.data,\n        items: state => state.carrito,\n        products: (state) => state.products,\n        client: (state)=> {\n            if(state.data == null){\n                return 'Sing in';\n            }else{\n                return state.data.primernombre+' '+state.data.primerapellido;\n            }\n        },\n        dCompra: (state) => {\n            return state.carrito;\n        },\n        totalCompra:(state) => {\n            return state.carrito.reduce((total, producto) => total + producto.precio*producto.cantidad, 0)\n        },        \n    },\n    actions:{\n        realizarCompra : (context) => {//si hay algun producto sin catidad para comprar no se envia\n        \n            const est = context.state.carrito.find(item => item.cantidad == 0);\n            if(est){\n             Swal.fire({\n                 type: 'error',\n                 title: 'Oops...',\n                 text: 'Error quantity of products',\n               })\n            }else{\n                context.commit('sendCompra');\n             }\n            \n        }\n    }\n})\n"]}]}